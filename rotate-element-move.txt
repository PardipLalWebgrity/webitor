static _handlePointerMoveTriangleMoveItem(e) {
    if (!props._trianT) return;

    const x = e.clientX / props._magnifScale,
          y = e.clientY / props._magnifScale,
          dx = Math.floor(x - props._actvdX),
          dy = Math.floor(y - props._actvdY);

    props._trianT.style.translate = `${dx}px ${dy}px`;

    methods._updatePropFormFieldsOfCanvasTarget({
        left: parseFloat(props._trianTcss.left) + dx,
        top:  parseFloat(props._trianTcss.top)  + dy,
    });
}




static _handlePointerUpTriangleMoveItem() {
    if (!props._trianT || props._actvmY === 0) return;

    // compute new left/top based on original position + drag delta
    const left = parseFloat(props._trianTcss.left) + (props._actvmX - props._actvdX) + 'px';
    const top  = parseFloat(props._trianTcss.top)  + (props._actvmY - props._actvdY) + 'px';

    Object.assign(props._trianT.style, { left, top, translate: 'none' });

    methods._saveCanvasCurrentTargetToIndexedDB();
}
